# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ------------------- Dashboard Secret ------------------- #

apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-certs
  namespace: kube-system
  labels:
    k8s-app: kubernetes-dashboard
data:
  DreamStream.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNzakNDQVpxZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFSTVE4d0RRWURWUVFERXdadFlYTjAKWlhJd0hoY05NVGt4TURJM01UTXhOekF3V2hjTk1qQXhNREkzTVRNeE56QXdXakFSTVE4d0RRWURWUVFERXdadApZWE4wWlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURUZklxZmkrZUVaR3prCmxadnFQcDB0N3g4QWFLTTQyQXN0OGdqK0phUHhYVmpFTWxraHpZZXZNc2hWSFNUYmhzUVZ0K1djcFY2cENENncKZjR4bVkzK3B1Wk1raSs5Zm9oNHpFWW1uNG1KVFgwYXh6RFFhUEJnaW15UW9yT3hyOVMrZksxbEU4N3ZBdmMxSwpqdEJJdjc0NlVwSGQwbTRVOGJZbzc4NFhHd3g0citWcXVhYlBzaDR4V010d1BiUmZBcjkvWGtzMzdzcEU4ZitoCkNIcjc5UkNaMS9lSzlqZk05UWdxZlBWRzVOeGhMeEdSMm9wNGhqUzlYeHAxNFNnZkFDL0Fpc1hPZDFDRGRCSzIKcm5BVW41WmZGYUozbk9qb1ZTZnBWcys4YzVuTmU3OEd4MmJQN2FDSW9pd3lzSkNESTVJd0VydjdSaWJkNVc4ZApTNHUzSlNCOUFnTUJBQUdqRlRBVE1CRUdBMVVkRVFRS01BaUNCbTFoYzNSbGNqQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBWUlUVjAzSjJxdnVWdlQ4TEhpUEd5cWo2VnZIU1hlRlhTbTBHUXFKdEUwQlAyd1R6Sis3cXBrUEcKemh2YmF1VjV6dUcvakR0UVFRdDVQcFNwY2RUa1dDblEyWjZ3Q0c1V0Vsc2ZWMWFDeWtJL3llUENLYngzcTcxLwordUNPSXl6N25UV29Tai80T2FOTnVzTTR2Y2NUWFZydUIxTVRHeE5POWZia0dRNlRrR01DZ3lLY2dEMGVyQzlKCjc2UVc1alpQTlI5L3ZCQ1hoMVFTdE5QdHFKT0lZRlhVemJrb3FkdFRWWnlObVRvMW8vQTRrOERhZnJMMUtheHMKeVBhdVFtRS9TNjExakw3WW0zSTJmNFY5Sm5hUW5MSjI5aHpPZnM5ZFhiSE9CSFRUUDZ0eURJTGhOeFdrNlNtRwowVEpRK1JoODFUQm1jM1pWVmJUVzdYdnNWOG8zWnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  DreamStream.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMDN5S240dm5oR1JzNUpXYjZqNmRMZThmQUdpak9OZ0xMZklJL2lXajhWMVl4REpaCkljMkhyekxJVlIwazI0YkVGYmZsbktWZXFRZytzSCtNWm1OL3FibVRKSXZ2WDZJZU14R0pwK0ppVTE5R3NjdzAKR2p3WUlwc2tLS3pzYS9Vdm55dFpSUE83d0wzTlNvN1FTTCsrT2xLUjNkSnVGUEcyS08vT0Z4c01lSy9sYXJtbQp6N0llTVZqTGNEMjBYd0svZjE1TE4rN0tSUEgvb1FoNisvVVFtZGYzaXZZM3pQVUlLbnoxUnVUY1lTOFJrZHFLCmVJWTB2VjhhZGVFb0h3QXZ3SXJGem5kUWczUVN0cTV3RkorV1h4V2lkNXpvNkZVbjZWYlB2SE9aelh1L0JzZG0KeisyZ2lLSXNNckNRZ3lPU01CSzcrMFltM2VWdkhVdUx0eVVnZlFJREFRQUJBb0lCQVFDK2Y0dDZwWkg0dm1FYwpFZXRzdDlQcllWNWlodDZud0d0cGlvQXhOWVNVVUlvNXlFUmpYM2hlQnZkUE83NU1nL3N5dVFCNTlyZnF1SU9ICmhvellXYjNRQzFvUWJJQkZlNG1LWkx6RFhmZEZ0Q2ZBMWZrRXZLYmMzVFJYODFQTzl2OWJkN2VrbFl2RTFQTUwKdXRMQkJQNThHSTVONmxQQVIrM1d1QlBDMmxtRWh3QkFFS3MxaGxYdnFWYTBOWGFoU2d6ZDdSU2R2QklOelQzdQpVT3VlTnQ4bVhEK0RNMUROZVA2OWtEVW5nN3pTK2NFb1doQ2pmM3BpdXFWTEJhYkRXWDBESmpESFlHNGZybHdTCmpRcWNDUTlkdXlCSGNUNVV1N3hJNHJOWmNzbFlUeVo1Mk5SRnF5dlFpSFNKQnVXeWxPMzlhOHg1Z3FFUkk1L0QKWUs5MUtMMWhBb0dCQVB1VkVYZUovb1FHU1FpZy8zOTM3UDRXanpXQXowQllSOVRLU3dYTzkxbExBOEM3RGJxcApSaEkvMmtCaGlqOHIveVVLSGVxNmxHTEdJZEx3djVjMW9kM1FSVDR4VUdWaVJBSlBwZHRjR1VIYm05QzQ3MzVrCldjbzZOWFlLTi9nRHB3TkEySkF5SmM1U3U2MEVkaGY2R05oL09vRUZucFFCN2Irb0lGa2RySmtGQW9HQkFOY3oKTzBlTlEvSm1XcWYwaUVhWHNtOUZVWnFycjBteld4ZGtLenF5V2VJM2w0cTQrMFU3d0pEc282aFZpRkhubVc2TApTWmpLMkdtc3pWNjlTaTdsajFKVWxwczRxUHAwWFh0ZVR0Q3NZa0NvU29VN2hCWFlLSlZLQVpOTmFvTFZhV3JwCjZwaS90Qm5JU2ROS1ZPM3JaWW9BQ2k3K1lqVTZ5YVllL3J4VExLTVpBb0dCQU5IL0xBVkwrbGJacUR5N3Bva1AKNFpKMTRqUVd3T2hFeURDbWF0aitXUmovdExJN2NNcE9ZVjc2VFlOUDU4V3pROVgzQytIU3UrbDIyT1RxY0FJWAprblZFVTRnR1FjVmVzTVg5RmNSMHErQjlIeUtxTzc2VXBSNVlXQ2VmZi9oVmxDTHpEZEhQQ2grZWoybHNQK2JqCnE3bUsrWnFZeGpWbEpyN0Q1N3g3T0liQkFvR0FFRFZEbWJnQ0RoZTNiRDcycEpwNFRma2lsRXVxQUJzS0dWRHEKRUptdU8yT0VmbVpBUm82aGlraklhcjFHYnlUS1laRU1FZjMxSHNCdEYxMmFZTDNaZFpINVplZDJrcWFCQS9HdQpiZmtOeldEZmUvbG5rVjJlY09BS0RsWWVWNHhMVEVvaDZTOUhHVW9FaFcxcnlCK2Fuakl5a2llR3JndW5kR09SClBBM25wc0VDZ1lBZ1JmMk1KMEUrWXJkVVNDUFBOeEJOQlVlcCs5NUtKaWloOVpwU20vc20wbHlkMy9BR1FTR2sKM1MxZ2lEdGpFY29RemlOWGtuQkp4emd4L01vekxnU2NTK2g2TUFCWkdtbE5lL2N0d0Zja05zdkx4SFdvSWI4eApEWXNXa3F0VmFxR0Q1Zy9GejRPU3hOZ0cvK1BLZ0dBbml6RDZlTTRTTHZ2SzhqQy9UcDhlS1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
type: Opaque

---
# ------------------- Dashboard Service Account ------------------- #

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system

---
# ------------------- Dashboard Role & Role Binding ------------------- #

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubernetes-dashboard-minimal
  namespace: kube-system
rules:
  # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create"]
  # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create"]
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs"]
  verbs: ["get", "update", "delete"]
  # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["kubernetes-dashboard-settings"]
  verbs: ["get", "update"]
  # Allow Dashboard to get metrics from heapster.
- apiGroups: [""]
  resources: ["services"]
  resourceNames: ["heapster"]
  verbs: ["proxy"]
- apiGroups: [""]
  resources: ["services/proxy"]
  resourceNames: ["heapster", "http:heapster:", "https:heapster:"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubernetes-dashboard-minimal
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard-minimal
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard
  namespace: kube-system

---
# ------------------- Dashboard Deployment ------------------- #

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      containers:
      - name: kubernetes-dashboard
        image: k8s.gcr.io/kubernetes-dashboard-arm:v1.10.1
        ports:
        - containerPort: 8443
          protocol: TCP
        args:
          - --auto-generate-certificates=false
          - --tls-cert-file=DreamStream.crt
          - --tls-key-file=DreamStream.pem
          - --token-ttl=86400
          # Uncomment the following line to manually specify Kubernetes API server Host
          # If not specified, Dashboard will attempt to auto discover the API server and connect
          # to it. Uncomment only if the default does not work.
          # - --apiserver-host=http://my-address:port
        volumeMounts:
        - name: kubernetes-dashboard-certs
          mountPath: /certs
          # Create on-disk volume to store exec logs
        - mountPath: /tmp
          name: tmp-volume
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 8443
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: kubernetes-dashboard-certs
        secret:
          secretName: kubernetes-dashboard-certs
      - name: tmp-volume
        emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        kubernetes.io/hostname: master
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

---
# ------------------- Dashboard Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kube-system
spec:
  ports:
    - port: 8001
      targetPort: 8443
  selector:
    k8s-app: kubernetes-dashboard
  type: LoadBalancer